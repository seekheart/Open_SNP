install.packages('rCurl, scrapeR')
install.packages('rCurl')
install.packages('RCurl')
install.packages("scrapeR")
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
install.packages("scrapeR")
library(scrapeR)
install.packages("rvest")
install.packages('sqldf')
install.packages('RSQLite')
#!/usr/bin/Rscript
#Rscript to Download openSNP Data
#Mike Tung
#Load the needed libraries
library(rvest)
#setup wd
setwd('~/github/Open_SNP/')
#First we need to determine how many user profiles there are.
get_profiles <- function(webpage){
base_url <- webpage
id_list <- c()
#make a flag for checking if there is a next page or not
flag <- FALSE
while(flag == FALSE){
flag <- TRUE
#parse out my IDs
profiles <- read_html(webpage)
id_table <- profiles %>%
html_nodes("table") %>%
html_table()
id_table <- data.frame(id_table)
id_list <- c(id_list,id_table[[1]])
#check if there is another page if so change flag to TRUE and cycle
#If there is no other pages flag will stay FALSE and loop terminates.
check <- check_next(webpage)
flag <- check[2]
webpage <- check[1]
# print(paste(flag,webpage)) ##sanity check
}
#Take all the ids and for each id go to the corresponding profile page
#and fetch the phenotypes
outfile_name <- ''
for (id in id_list) {
new_page <- gsub('\\?direction=asc&sort=id', paste('/',id, sep = ''), base_url)
outfile_name <- paste('opensnp', id, sep = '_')
profile <- read_html(new_page)
Sys.sleep(5)
phenotype_table <- profile %>%
html_nodes("table") %>%
html_table()
phenotype_table <- data.frame(phenotype_table)
write.csv(phenotype_table, outfile_name)
}
}
check_next <- function(webpage){
base_url <- webpage
webpage <- readLines(webpage)
Sys.sleep(5)
hit <- grep('page=\\d', webpage, perl = TRUE, value = TRUE)
flag <- grepl('"next next_page disabled"', hit ,perl = TRUE)
hit <- gsub('.*href="', '', hit, perl = TRUE)
hit <- gsub('"', '', hit, perl = TRUE)
hit <- gsub('>.*', '', hit, perl = TRUE)
new_webpage <- gsub('/users.*', hit, base_url, perl = TRUE)
return(c(new_webpage, flag))
}
webpage <- 'https://opensnp.org/users?direction=asc&sort=id'
get_profiles(webpage)
